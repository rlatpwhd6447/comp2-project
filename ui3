#include<stdio.h>
#include<stdlib.h>
#include<time.h>

typedef struct
{
	char pan;
	int dol;
	int number;
}board;//오목판 

typedef struct
{
	int mxrange_x[20];//x좌표 최대범위 
	int mnrange_x[20];//x좌표 최소범위 
	
	int mxrange_y[20];//y좌표 최대범위 
	int mnrange_y[20];//y좌표 최소범위 
}chromosome;//개체 

void create_population(int *x,int *y);//염색체 생성 
int output(int*,int*);//좌표 출력 
void omok();//오목 수를 뽑아냄 
void read(int*,int*);
void game(void);//오목 하는거 보는거 

chromosome crms[100];//각각의 개체
board point[15][15];//바둑판 생성

main()
{
	srand((unsigned)time(NULL));
	omok();
	game();
	
}

void game(void)
{ 
	int i,j;
	int sq;//순서 
	int sq_number=0;//순서 
	int opt_x=NULL,opt_y=NULL;//상대 수 좌표
	int opt_sq=0,com_sq=0;//각 돌들 순서 
	int com_x,com_y;//컴 수 좌표 
	int delta_x,delta_y;//증분 
	int re;//다시 
	int number;//싸우는 컴번호 
	int back;//백스텝 
	
	number=rand()%100;
	
	for(i=0;i<15;i++)
	{
		for(j=0;j<15;j++)
		{
			point[i][j].pan='*';
		}
	}
	for(i=0;i<15;i++)
	{
		printf("  %2d",i);
	}
	printf("\n");
	for(i=0;i<15;i++)
	{
		printf("%2d ",i);
		for(j=0;j<15;j++)
		{
			printf("%c   ",point[i][j].pan);
		}
		printf("\n\n");
	}
	
	sq=rand()%((1-0)+1)+0;
	
	while(1)
	{
		if(sq==0)//상대 먼저시작 
		{
			while(1)
			{
				printf("상대\n");
				printf("x:");
				scanf("%d",&opt_x);
				printf("y:");
				scanf("%d",&opt_y);
				
				if(point[opt_y][opt_x].pan=='*'&&opt_x<15&&opt_y<15)
				{
					point[opt_y][opt_x].pan='X';
					point[opt_y][opt_x].dol=0;
					point[opt_y][opt_x].number=opt_sq;
					opt_sq++; 
					break;
				}
			}
		}
		
		else if(sq==1)//프로그램 부터 시작 
		{
			while(1)
			{
				if(opt_x==NULL)
				{
					opt_x=7;
					opt_y=7;
				}
				output(&delta_x,&delta_y);
				
				read(&delta_x,&opt_x);
				read(&delta_y,&opt_y);
				
				if(point[com_y][com_x].pan=='*')
				{
					printf("-------------4-----------\n");
					point[com_y][com_x].pan='O';
					point[com_y][com_x].dol=0;
					point[com_y][com_x].number=com_sq;
					com_sq++; 
					break;
				}
				
			}
		}
		
		system("cls");
		for(i=0;i<15;i++)
		{
			printf("  %2d",i);
		}
		
		printf("\n");
		for(i=0;i<15;i++)
		{
			printf("%2d ",i);
			for(j=0;j<15;j++)
			{
				printf("%c   ",point[i][j].pan);
			}
			printf("\n\n");
		}
		
		if(sq==0)
		{
			sq=1;	
		} 
		
		else if(sq==1)
		{
			sq=0;
		}
		sq_number++;
	}
}

void omok()
{
	int i,j;
	int x,y;//한 수 
	
	for(i=0;i<100;i++)
	{
		for(j=0;j<20;j++)
		{
			create_population(&crms[i].mxrange_x[j],&crms[i].mnrange_x[j]);
			create_population(&crms[i].mxrange_y[j],&crms[i].mnrange_y[j]);
		}
	}
	
	/*for(i=0;i<100;i++)
	{
		printf("유전자%d\n",i);
		for(j=0;j<20;j++)
		{
			printf("x:%d~%d  ",crms[i].mnrange_x[j],crms[i].mxrange_x[j]);
			printf("y:%d~%d  ",crms[i].mnrange_y[j],crms[i].mxrange_y[j]);
		}
		printf("\n----------\n");
	}*/	
} 

int output(int *x,int *y,int num)
{
	int i;
	int sum_x,sum_y;//20개의 범위에서 뽑은 수들의 합 
	int randnum_x[20],randnum_y[20];//20개의 범위에서 뽑은 수 
	sum_x=0;
	sum_y=0;
	 
	for(i=0;i<20;i++)
	{
		randnum_x[i]=rand()%((crms[num].mxrange_x[i]-crms[num].mnrange_x[i])+1)+crms[num].mnrange_x[i];
		//printf("x=%d\n",randnum_x[i]);
		sum_x=sum_x+randnum_x[i];
		
		randnum_y[i]=rand()%((crms[num].mxrange_y[i]-crms[num].mnrange_y[i])+1)+crms[num].mnrange_y[i];
		//printf("y=%d\n\n",randnum_y[i]);
		sum_y=sum_y+randnum_y[i];
	}
	*x=sum_x/20;
	*y=sum_y/20;
	return num;	
}

void create_population(int *x,int *y)
{
	int i;
	
	while(1)
	{
		*x=rand()%((15-(-15))+1)+(-15);
		*y=rand()%((15-(-15))+1)+(-15);
		
		if(*x-*y>2)
		{
			break;
		}
	}	
}

void read(int *delta,int *opt)
{
	 int sum,
	 	 com;
	 
	 sum=*delta+*opt;
}
